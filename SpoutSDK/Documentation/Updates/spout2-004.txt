Spout 2.004 beta

Revision for DirectX setup after installation.

The Spout installation now includes :

An additional program "SpoutDirectX.exe" which allows selection of whether DirectX 9 or DirectX 11 functions will be used in Spout applications.

The selection can still be made during installation but can be changed afterwards. The mode selected then applies to all Spout applications that are built with the 2.004 SDK. This means that the developer does not need to build a project in anticipation of compatibility, the user can select and the application will adapt.

Max Jitter externals updated for Max 7 and 64bit

C compatible dll for compilers other than Visual Studio, including VS2010 and VS2012 project files and an Openframeworks Codeblocks/ MingW example and project file.

Summary of changes (full details in individual source files)

Spout SDK

SpoutSDK.cpp
o Included SetAdapter for multiple adapters - Credit Franz Hildgen.
o Read/Write DX9 mode from registry
o Added GetAdapter, GetNumAdapters, GetAdapterName
o corrected "const char *" arg for GetSenderInfo
o Recompile for global DX9 flag
o OpenReceiver - safety in case no opengl context

SpoutDirectX
o removed dx9 flag from setadapter

SpoutGLDXinterop.cpp
o Read/Write DX9 mode from registry
o removed dx9 flag from setadapter
o removed Intel / Optimus graphics detecion from GetAdapterInfo
o Only reads registry for DX9 mode but does not write it
o Max Jitter problems if the OpenGL texture or fbo are re-created, so only delete them on exit

SpoutSenderNames.cpp
o FindSender
  - return false if the the sender is not registered
  - if registered sender is no longer there release it
o CheckSender bug - Name for ReleaseSenderName was wrong


Applications and plugins

VDJSpoutSender.cpp
VDJSpoutReceiver.cpp
o Create an invisible dummy button window for OpenGL due to SetPixelFormat problems noted with Mapio

SpoutPanel - main.cpp
o Added Font (ttf)to known extension types
o Added Font selection dialog and "\FONT" option
o Added font properties to file name search via font handle
o fixed case sensitive extensions for Openfile
o remove unknown texture from DX9 incompatibility report

SpoutCam - filters.cpp
o Created a dummy window for OpenGL context creation due to SetPixelFormat error in Mapio
o Missing strmbase.lib - generated from DirectShow base classes - copied to a "libs" folder

Processing - JspoutSDK.cpp
o Recompile for revised SpoutPanel registry write of sender name
o Added Spout Controls for debugging
o Checked for null name and text for release env in Java_JSpout_CheckControls
o Compiled with JDK 8.45
o Used pixel transfer method for Java_JSpout_ReadTexture due to problems with Intel 4400 graphics

Milkdrop - plugin.cpp
o User observation that custom messages do not work.As a a workaround, custom message rendering
  is replaced with the same as used for title animation

jit.gl.freeframe
o conversion to Max 7 SDK

jit.gl.spoutreceiver
jit.gl.spoutsender.c
o Revised for Max 7 and 64 bit
o Created utilities for Save and restore OpenGL state
o Save/restore state in dest_closing for release of receiver
o Introduced flags for closing and changed to ensure that all is done before creating the sender/receiver again
o Moved ReleaseReceiver from jit_gl_spout_receiver_sendername to draw

WinSpoutSDK - demo program
o Included SetAdapter multiple adapters - Franz Hildgen. DX9 mode must be set first
o Included check for DirectX 9.0c in diagnostics
o Retrieve DX9 mode from registry instead of setting flag for compile
o User selection of DX9 mode - Help > DirectX 9
o Added DX9 mode and adapter selection dialog - Help > Setup
o Changed Help > System Configuration to Help > Diagnostics
o Tncluded Optimus graphics detetion in diagnostic report.
o Included Version information in resource file Vers 2.004
o Included product version number in About box
o cleaned up DX9 compatibility for sender or receiver depending on mode set globally
o Space bar to hide/show status information for screen capture


===========================================
Installer
DirectX 9 and 64bit options
Created SPOUTDIRECTX folder
  - SpoutDirectX.exe to set DirectX mode for all apps
Removed memoryshare options
Removed redundant SpoutTray
Included 64bit Jitter externals and demo patches
SPOUTSDK
  - included VS2012 project files for dll
  SpoutSDK/SPOUTDLL
   - created C compatible dll project
   - included VS2010 and VS2012 project files
   - included Codeblocks example and project file


Changes for 2.004 release

SpoutDXmode.cpp
03.06.15 - Started based on SpoutTray Version 2.08
07.06.15 - First working version
08.06.15 - Clean version 1.00 for DirectX 9 selection
01.07.15 - Ran into "Compatibility Assistant" trouble due to the app name
	    http://pete.akeo.ie/2011/10/avoiding-program-compatibility.html
	    https://technet.microsoft.com/en-us/library/cc709628.aspx					
	 - renamed from SpoutSetup to SpoutDXmode
07.07.15 - Converted VS2012 project to VS2010


VDJSpoutSender.cpp
08.07.15 - Create an invisible dummy button window for OpenGL due to SetPixelFormat problems noted with Mapio
01.08.15 - Recompile for 2.004 release /MT
	   Version 1.03

VDJSpoutReceiver.cpp
07.07.15 - Recompile on new drive Windows 7 32bit VS2010 - VDJ vers v8.0.2345
08.07.15 - Create an invisible dummy button window for OpenGL due to SetPixelFormat problems noted with Mapio
01.08.15 - Recompile for 2.004 release /MT
	   Version 1.04


SpoutPanel - main.cpp
13.06.15 - Added Font (ttf)to known extension types
	 - Version 2.11
14.06.15 - Added Font selection dialog and "\FONT" option
15.06.15 - Added font properties to file name search via font handle
	 - Version 2.12
19.06.15 - fixed case sensitive extensions for Openfile
08.07.15 - remove unknown texture from DX9 incompatibility report
	 - recompile for 2.004 release
	 - Version 2.14 /MT


SpoutCam - filters.cpp
08.06.15 - Created a dummy window for OpenGL context creation due to SetPixelFormat error in Mapio
	 - needs testing with different programs and 64bit Windows 7 and 8
17.06.15 - Transferred project to Win7 64bit SSD drive
	   Missing strmbase.lib - generated from DirectShow base classes - copied to a "libs" folder
07.07.15 - Transferred project back to Win 7 32bit 
01.08.15 - Recompile for 2.004 release 32bit Win32 VS2010 /MT


Processing - JspoutSDK.cpp
26.05.15 - Recompile for revised SpoutPanel registry write of sender name
29.06.15 - Added Spout Controls
03.07.15 - Checked for null name and text for release env in Java_JSpout_CheckControls
07.07.15 - Converted VS2012 project to VS2010
	 - Compiled with JDK 8.45
17.07.15 - Recomplile Win32 with SpoutControls class revisions. No changes made to JSpout functions.
22.07.15 - Included "CreateControl"
27.07.15 - Used pixel transfer method for Java_JSpout_ReadTexture due to problems with Intel 4400 graphics
	 - recompiled Win32 and x64 after work on Max externals
01.08.15 - Recompile Win32 for 2.004 release VS2010 /MT UseD3D9 undefined
01.08.15 - Recompile x64 for 2.004 release VS2012 /MT UseD3D9 undefined


Milkdrop - plugin.cpp
17.06.15 - User observation that custom messages do not work.
	   This is isolated to "RenderStringToTitleTexture" and seems to be related to
	   generating the fonts from GDI to DX9. Not sure of the reason. Could be DX9 libraries.
	   As a a workaround, custom message rendering is replaced with the same as used for 
	   title animation which works OK. The limitation is that this gives a fixed font,
	   but the colour should come out the same as in the custom message setup file.
07.07.15 - Recompile for 2.004 release


jit.gl.freeframe
27.07.15 - conversion to Max 7 SDK
01.08.15 - Recompiled for Spout 2.004 - 32 bit VS2010 - Version 1.008.10


jit.gl.spoutreceiver
24.07.15 - Revised for Max 7 and 64 bit
25.07.15 - Changed SpoutGLDXinterop so that the OpenGL texture and fbo are not re-created
26.07.15 - Created utilities for Save and restore OpenGL state
	 - Save/restore state in dest_closing for release of receiver
	 - Introduced flags for closing and changed to ensure that all is done before creating the receiver again
	 - Moved ReleaseReceiver from jit_gl_spout_receiver_sendername to draw
01.08.15 - Recompiled for Spout 2.004 - 32 bit VS2010 - Version 2.007.10
01.08.15 - Recompiled for Spout 2.004 - 64bit VS2012 - Version 2.007.12


jit.gl.spoutsender.c
24.07.15 - Revised for Max 7 and 64 bit
25.07.15 - Changed SpoutGLDXinterop so that the OpenGL texture and fbo are not re-created
26.07.15 - Created utilities for Save and restore OpenGL state
	 - Save/restore state in dest_closing for release of sender
	 - Introduced flags for closing and changed to ensure that all is done before creating the sender again
01.08.15 - Recompiled for Spout 2.004 - 32 bit VS2010 - Version 2.007.10
01.08.15 - Recompiled for Spout 2.004 - 64bit VS2012 - Version 2.007.12


WinSpoutSDK - demo program
29.05.15 - Included SetAdapter multiple adapters - Franz Hildgen. DX9 mode must be set first
01.06.15 - Included check for DirectX 9.0c in diagnostics
	 - Retrieve DX9 mode from registry instead of setting flag for compile
	 - User selection of DX9 mode - Help > DirectX 9
02.06.15 - Added DX9 mode and adapter selection dialog - Help > Setup
	 - Changed Help > System Configuration to Help > Diagnostics
08.06.15 - Removed setup dialog - replaced by SpoutSetup.exe to configure DirectX mode
17.06.15 - Transferred project to Win7 64bit SSD drive
20.06.15 - Tncluded Optimus graphics detetion in diagnostic report.
	 - Included Version information in resource file Vers 2.004
07.07.15 - Included product version number in About box
08.07.15 - cleaned up DX9 compatibility for sender or receiver depending on mode set globally
01.08.15 - VS2010 compile for 2.004 release - Version 2.004


Spout SDK

SpoutDirectX
29.05.15 - Included SetAdapter for multiple adapters - Franz Hildgen.
02.06.15 - Added GetAdapter, GetNumAdapters, GetAdapterName
08.06.15 - removed dx9 flag from setadapter
04.08.15 - cleanup


SpoutGLDXinterop.cpp
29.05.15 - Included SetAdapter for multiple adapters - Franz Hildgen.
01.06.15 - Read/Write DX9 mode from registry
02.06.15 - Added GetAdapter, GetNumAdapters, GetAdapterName
08.06.15 - removed dx9 flag from setadapter
20.06.15 - removed Intel / Optimus graphics detecion from GetAdapterInfo
08.07.15 - Only reads registry for DX9 mode but does not write it
25.07.15 - Max Jitter problems if the OpenGL texture or fbo are re-created, so only delete them on exit


SpoutReceiver.cpp
29.05.15 - Included SetAdapter for multiple adapters - Franz Hildgen.
02.06.15 - Added GetAdapter, GetNumAdapters, GetAdapterName


SpoutSender.cpp
29.05.15 - Included SetAdapter for multiple adapters - Franz Hildgen.
02.06.15 - Added GetAdapter, GetNumAdapters, GetAdapterName
08.06.15 - Added SelectSenderPanel for user adapter output selection


SpoutSDK.cpp
29.05.15 - Included SetAdapter for multiple adapters - Franz Hildgen.
01.06.15 - Read/Write DX9 mode from registry
02.06.15 - Added GetAdapter, GetNumAdapters, GetAdapterName
04.07.15 - corrected "const char *" arg for GetSenderInfo
08.07.15 - Recompile for global DX9 flag
01.08.15 - OpenReceiver - safety in case no opengl context


SpoutSenderNames.cpp
01.08.15 - FindSender
             - return false if the the sender is not registered
	     - if registered sender is no longer there release it
	 - CheckSender bug - Name for ReleaseSenderName was wrong
